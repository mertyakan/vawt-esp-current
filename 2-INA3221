#include <Wire.h>
#include <INA3221.h>
#include <ESP8266WiFi.h>
#include <ESPAsyncWebServer.h>

// Wi-Fi bilgileri
const char* ssid = "WIFI";
const char* password = "WIFI";

INA3221 ina3221(INA3221_ADDR40_GND);
AsyncWebServer server(80);

// Fonksiyonların bildirimi
String getDataJSON();

void setup() {
    Serial.begin(115200);
    
    // I2C pinlerini D1 ve D2 olarak ayarla
    Wire.begin(D1, D2);

    // INA3221 başlatma
    ina3221.begin(&Wire);

    // WiFi Bağlantısı
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("WiFi bağlanıyor...");
    }
    Serial.println("WiFi bağlantısı başarılı!");

    // Web sayfası işleyicisi
server.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
    String html = R"rawliteral(
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>DC Elektrik Üretimi / Veri Monitörü</title>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    </head>
    <body>
        <h1>DC Elektrik Üretimi / Veri Monitörü</h1>
        <div>
            <canvas id="chart1" width="400" height="140"></canvas>
            <canvas id="chart2" width="400" height="140"></canvas>
            <canvas id="chart3" width="400" height="140"></canvas>
        </div>
        <script>
            async function fetchData() {
                const response = await fetch('/data');
                return await response.json();
            }

            function createChart(ctx, label) {
                return new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: [],
                        datasets: [
                            { label: label + ' Akım (mA)', data: [], borderColor: 'red', fill: false },
                            { label: label + ' Gerilim (V)', data: [], borderColor: 'blue', fill: false }
                        ]
                    },
                    options: {
                        scales: {
                            x: { title: { display: true, text: 'Zaman (s)' } },
                            y: { title: { display: true, text: 'Değer' } }
                        }
                    }
                });
            }

            const chart1 = createChart(document.getElementById('chart1').getContext('2d'), "Kondansatör Çıkışı");
            const chart2 = createChart(document.getElementById('chart2').getContext('2d'), "DC Motor Çıkışı");
            const chart3 = createChart(document.getElementById('chart3').getContext('2d'), "Batarya");

            setInterval(async () => {
                const data = await fetchData();
                const now = new Date().toLocaleTimeString();
                [chart1, chart2, chart3].forEach((chart, i) => {
                    chart.data.labels.push(now);
                    chart.data.datasets[0].data.push(data.voltage[i]);  // Akım ve voltaj yer değiştirdi
                    chart.data.datasets[1].data.push(data.current[i]); // Akım ve voltaj yer değiştirdi
                    if (chart.data.labels.length > 30) chart.data.labels.shift();
                    if (chart.data.datasets[0].data.length > 30) chart.data.datasets[0].data.shift();
                    if (chart.data.datasets[1].data.length > 30) chart.data.datasets[1].data.shift();
                    chart.update();
                });
            }, 1000);
        </script>
    </body>
    </html>
    )rawliteral";
    request->send(200, "text/html", html);
});

    // Veri sağlayıcı
    server.on("/data", HTTP_GET, [](AsyncWebServerRequest *request) {
        request->send(200, "application/json", getDataJSON());
    });

    server.begin();
}

void loop() {
    // Boş bırakıldı, async sunucu kullanıyoruz.
}

String getDataJSON() {
    String json = "{ \"current\": [";
    for (ina3221_ch_t i = INA3221_CH1; i <= INA3221_CH3; i = static_cast<ina3221_ch_t>(i + 1)) {
        json += String(ina3221.getCurrent(i), 2);
        if (i != INA3221_CH3) json += ", ";
    }
    json += "], \"voltage\": [";
    for (ina3221_ch_t i = INA3221_CH1; i <= INA3221_CH3; i = static_cast<ina3221_ch_t>(i + 1)) {
        json += String(ina3221.getVoltage(i), 2);
        if (i != INA3221_CH3) json += ", ";
    }
    json += "] }";
    return json;
}
